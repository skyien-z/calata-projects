```catala
declaration scope Student:
    input age content integer
    input attendences content integer

    output is_over_21 condition
    output perfect_attendence condition

scope Student:
    rule is_over_21 under condition age >= 21 consequence fulfilled
    rule perfect_attendence under condition attendences = 23 consequence fulfilled

declaration enumeration BeverageType:
    -- Soda
    -- Water
    -- Milk
    -- Juice

declaration structure BeverageTax:
    data beverage content BeverageType
    data liters content decimal

declaration scope BeverageTaxComputation:
    input student scope Student
    context output tax content BeverageTax

scope BeverageTaxComputation:
    label article_1
    definition tax equals BeverageTax {
        -- beverage: Soda
        -- liters: 5
    }

scope BeverageTaxComputation:
    exception article_1
    definition tax under condition 
        student.is_over_21 
    consequence equals BeverageTax {
        -- beverage: Milk
        -- liters: 1
    }

scope BeverageTaxComputation:
    exception article_1
    definition tax under condition 
        student.perfect_attendence and not student.is_over_21
    consequence equals BeverageTax {
        -- beverage: Milk
        -- liters: 1
    }

declaration scope Test1:
    tax_computation scope BeverageTaxComputation
    output final_tax content BeverageTax

scope Test1:
    definition tax_computation.student equals 22
    definition tax_computation.student.attendences equals 23

    definition final_tax equals tax_computation.tax
    # assertion final_tax.beverage equals Milk
    # assertion final_tax.liters equals 1
```
